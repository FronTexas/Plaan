package com.example.plaan;

import java.util.Calendar;

import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.Window;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.zenkun.datetimepicker.time.RadialPickerLayout;
import com.zenkun.datetimepicker.time.TimePickerDialog;
import com.zenkun.datetimepicker.time.TimePickerDialog.OnTimeSetListener;

public class ScrollingUI extends FragmentActivity implements OnClickListener,
		OnTimeSetListener {

	RelativeLayout rlLayoutActivityCard, rlLayoutSleepingCard,
			rlAvailableTimeClock, rlSleepingCard, rlSleepingCloudGroup,
			rlYellowClock;

	ImageView ivAvailableTimeClock, ivBlueTimeFrame, ivSleepingCloud;

	TextView tvAvailableTime, tvSLEEP, tvSetSleepTime;

	RelativeLayout rlFirstActivityCard;
	EditText etActivityName;
	RelativeLayout rlOneTimeText, rlLoopingText;
	TextView tvOneTime, tvLooping, tvStartOneTime, tvStartHoursOneTime,
			tvEndOneTime, tvEndHoursOneTime;
	ImageView ivDash;

	int clickedActivityType;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		this.requestWindowFeature(Window.FEATURE_NO_TITLE);
		super.onCreate(savedInstanceState);
		setContentView(R.layout.scrolling_ui_main);

		initializeViews();
		setTypefaces();

		clickedActivityType = rlOneTimeText.getId();

		tvSetSleepTime.setOnClickListener(this);

	}

	private void setTypefaces() {
		TypefacePlaan tfp = new TypefacePlaan();
		tfp.setTypeface(tvAvailableTime, TypefacePlaan.LEAGUE_GOTHIC);
		tfp.setTypeface(tvSLEEP, TypefacePlaan.OPEN_SANS_BOLD);
		tfp.setTypeface(tvSetSleepTime, TypefacePlaan.OPEN_SANS_BOLD);
		tfp.setTypeface(etActivityName, TypefacePlaan.LEAGUE_GOTHIC_ITALIC);
		tfp.setTypeface(tvOneTime, TypefacePlaan.LEAGUE_GOTHIC_ITALIC);
		tfp.setTypeface(tvLooping, TypefacePlaan.LEAGUE_GOTHIC_ITALIC);
		tfp.setTypeface(tvStartOneTime, TypefacePlaan.OPEN_SANS_BOLD);
		tfp.setTypeface(tvStartHoursOneTime, TypefacePlaan.LEAGUE_GOTHIC_ITALIC);
		tfp.setTypeface(tvEndOneTime, TypefacePlaan.OPEN_SANS_BOLD);
		tfp.setTypeface(tvEndHoursOneTime, TypefacePlaan.LEAGUE_GOTHIC_ITALIC);
	}

	private void initializeViews() {
		rlLayoutActivityCard = (RelativeLayout) findViewById(R.id.rlLayoutActivityCard);
		rlLayoutSleepingCard = (RelativeLayout) findViewById(R.id.rlLayoutSleepingCard);
		rlSleepingCard = (RelativeLayout) findViewById(R.id.rlSleepingCard);
		rlSleepingCloudGroup = (RelativeLayout) findViewById(R.id.rlSleepingCloudGroup);

		ivSleepingCloud = (ImageView) findViewById(R.id.ivSleepingCloud);

		tvSLEEP = (TextView) findViewById(R.id.tvSLEEP);
		tvSetSleepTime = (TextView) findViewById(R.id.tvSetSleepTime);
		tvAvailableTime = (TextView) findViewById(R.id.tvAvailableTime);
		rlFirstActivityCard = (RelativeLayout) findViewById(R.id.rlFirstActivityCard);
		etActivityName = (EditText) findViewById(R.id.etActivityName);
		rlOneTimeText = (RelativeLayout) findViewById(R.id.rlOneTimeText);
		rlLoopingText = (RelativeLayout) findViewById(R.id.rlLoopingText);
		tvOneTime = (TextView) findViewById(R.id.tvOneTime);
		tvLooping = (TextView) findViewById(R.id.tvLooping);
		tvStartOneTime = (TextView) findViewById(R.id.tvStartOneTime);
		tvStartHoursOneTime = (TextView) findViewById(R.id.tvStartHoursOneTime);
		tvEndOneTime = (TextView) findViewById(R.id.tvEndOneTime);
		tvEndHoursOneTime = (TextView) findViewById(R.id.tvEndHoursOneTime);
		ivDash = (ImageView) findViewById(R.id.ivDash);
	}

	@Override
	public void onClick(View v) {
		if (v.getId() == tvSetSleepTime.getId()
				|| v.getId() == tvStartHoursOneTime.getId()
				|| v.getId() == tvEndHoursOneTime.getId()) {
			Calendar calendar = Calendar.getInstance();
			TimePickerDialog timePickerDialog = TimePickerDialog.newInstance(
					this, calendar.get(Calendar.HOUR_OF_DAY),
					calendar.get(Calendar.MINUTE), false);
			timePickerDialog.show(getSupportFragmentManager(), "timepicker");
		}else if(v.getId() == rlOneTimeText.getId()){
			
		}
	}

	@Override
	public void onTimeSet(RadialPickerLayout v, int hourOfDay, int minute) {
		if (v.getId() == tvSetSleepTime.getId())
			tvSetSleepTime.setText(addZeros("" + hourOfDay) + ":"
					+ addZeros("" + minute));
		else if (v.getId() == tvStartHoursOneTime.getId()) {
			tvStartHoursOneTime.setText(addZeros("" + hourOfDay) + ":"
					+ addZeros("" + minute));
		} else if (v.getId() == tvEndHoursOneTime.getId()) {
			tvEndHoursOneTime.setText(addZeros("" + hourOfDay) + ":"
					+ addZeros("" + minute));
		}
	}

	private String addZeros(String s) {
		if (s.length() == 1) {
			s = "0" + s;
		}
		return s;
	}

}
